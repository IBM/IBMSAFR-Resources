-- (c) Copyright IBM Corporation 2011. 
-- Copyright Contributors to the GenevaERS Project.
-- SPDX-License-Identifier: Apache-2.0
--
-- ***************************************************************************
-- 
-- Licensed under the Apache License, Version 2.0 (the "License"); 
-- you may not use this file except in compliance with the License. 
-- You may obtain a copy of the License at 
-- 
-- http://www.apache.org/licenses/LICENSE-2.0 
-- 
-- Unless required by applicable law or agreed to in writing, software 
-- distributed under the License is distributed on an "AS IS" BASIS, 
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and 
-- limitations under the License. 
-- ****************************************************************************
--

CREATE PROCEDURE GETDEPSEXIT(IN P_ENVIRONID INT,
                                 IN P_ENTITYID INT)

 DYNAMIC RESULT SETS 1
 LANGUAGE SQL
 DISABLE DEBUG MODE

--THIS SP EXTRACTS ALL DEPENDANT AND RELATED COMPONENTS OF EXIT.

 BEGIN

  DECLARE SQLSTATE CHAR(5) DEFAULT '00000';

  DECLARE EXIT_CUR CURSOR WITH RETURN
  FOR SELECT  * FROM SESSION.TMPDEPEXIT
  ORDER BY UPPER(ENTITYTYPE),
  UPPER(CHILDTYPE),
  UPPER(ENTITYNAME);

  DECLARE GLOBAL TEMPORARY TABLE
  SESSION.TMPDEPEXIT
  (ENTITYTYPE VARCHAR(30),CHILDTYPE CHAR(30),
  ENTITYID INT,ENTITYNAME VARCHAR(254),
  ENVIRONID INT,ENVIRON VARCHAR(50),DEFAULTFLG SMALLINT,
  DEPENDFLG CHAR(3))
  ON COMMIT DROP TABLE;

  INSERT INTO SESSION.TMPDEPEXIT
    VALUES ('Physical Files' ,'NONE', 0, ' ',0,' ',0,'N') ;

  INSERT INTO SESSION.TMPDEPEXIT
    SELECT DISTINCT 'Physical Files' ,'NONE',B.PHYFILEID,
	B.NAME,A.ENVIRONID,A.NAME,0,'N'
    FROM ENVIRON A
    INNER JOIN PHYFILE B
      ON A.ENVIRONID=B.ENVIRONID
    INNER JOIN EXIT C
      ON B.READEXITID=C.EXITID
      AND B.ENVIRONID=C.ENVIRONID
    WHERE C.ENVIRONID=P_ENVIRONID
    AND C.EXITID=P_ENTITYID;

  INSERT INTO SESSION.TMPDEPEXIT
    VALUES ('Logical Records' ,'NONE', 0, ' ',0,' ',0,'N') ;

  INSERT INTO SESSION.TMPDEPEXIT
    SELECT 'Logical Records','NONE',B.LOGRECID,B.NAME,A.ENVIRONID,
	A.NAME,0,'N'
    FROM ENVIRON A
    INNER JOIN LOGREC B
      ON A.ENVIRONID=B.ENVIRONID
    INNER JOIN EXIT C
      ON B.LOOKUPEXITID=C.EXITID
      AND B.ENVIRONID=C.ENVIRONID
    WHERE C.ENVIRONID=P_ENVIRONID
    AND C.EXITID=P_ENTITYID;

  INSERT INTO SESSION.TMPDEPEXIT
    VALUES ('Views','Write',0, ' ',0,' ',0,'N') ;

  INSERT INTO SESSION.TMPDEPEXIT
    SELECT 'Views','Write',B.VIEWID,B.NAME,
	A.ENVIRONID,A.NAME,0,'N'
    FROM ENVIRON A
    INNER JOIN VIEW B
        ON A.ENVIRONID=B.ENVIRONID
    INNER JOIN EXIT C
        ON B.WRITEEXITID=C.EXITID
        AND B.ENVIRONID=C.ENVIRONID
    WHERE C.ENVIRONID=P_ENVIRONID
    AND C.EXITID=P_ENTITYID;

  INSERT INTO SESSION.TMPDEPEXIT
    VALUES ('Views','Format',0, ' ',0,' ',0,'N') ;

  INSERT INTO SESSION.TMPDEPEXIT
    SELECT 'Views','Format',B.VIEWID,B.NAME,
    A.ENVIRONID,A.NAME,0,'N'
    FROM ENVIRON A
    INNER JOIN VIEW B
	  ON A.ENVIRONID=B.ENVIRONID
    INNER JOIN EXIT C
      ON B.FORMATEXITID=C.EXITID
      AND B.ENVIRONID=C.ENVIRONID
    WHERE C.ENVIRONID=P_ENVIRONID
    AND C.EXITID = P_ENTITYID;

  INSERT INTO SESSION.TMPDEPEXIT
    VALUES ('Views','Logic Text',0, ' ',0,' ',0,'N') ;

  INSERT INTO SESSION.TMPDEPEXIT
   SELECT 'Views','Logic Text',B.VIEWID,B.NAME,
   A.ENVIRONID,A.NAME,0,'N'
   FROM ENVIRON A
   INNER JOIN VIEW B
     ON A.ENVIRONID=B.ENVIRONID
   INNER JOIN VIEWLOGICDEPEND C
     ON B.VIEWID = C.VIEWID
     AND B.ENVIRONID=C.ENVIRONID
   INNER JOIN EXIT D
     ON C.EXITID=D.EXITID
     AND C.ENVIRONID=D.ENVIRONID
   WHERE D.ENVIRONID=P_ENVIRONID
   AND D.EXITID=P_ENTITYID;

 INSERT INTO SESSION.TMPDEPEXIT
  VALUES ('View Folders' ,'None', 0, ' ',0,' ',0,'N') ;
   
 INSERT INTO SESSION.TMPDEPEXIT
  SELECT DISTINCT 'View Folders' ,'None',
    B.VIEWFOLDERID,
    B.NAME,
    A.ENVIRONID,
    A.NAME,
    0,
    'N'
  FROM ENVIRON A,
       VIEWFOLDER B,
       VFVASSOC C,
       SESSION.TMPDEPEXIT D
  WHERE A.ENVIRONID=B.ENVIRONID
  AND B.ENVIRONID=C.ENVIRONID
  AND B.VIEWFOLDERID=C.VIEWFOLDERID
  AND C.ENVIRONID=D.ENVIRONID
  AND C.VIEWID=D.ENTITYID
  AND UPPER(D.ENTITYTYPE)='VIEWS'
  AND D.ENTITYID > 0;
  
   OPEN EXIT_CUR ;

 END
